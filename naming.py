# python is script language so we can store and encrypt the codes


import hashlib


# An oid is required to be generated every time an object is created. To prevent 
# an object being probed by adversaries, the naming should be generated by a 
# cryptographically strong pseudorandom number generator based on pathnames using a hash map
def generate_oid(pathname):
    h = hashlib.new('sha256') # instead of MD5
    h.update(pathname.encode('ascii'))
    return h.hexdigest()
    
# Authentication is needed in case of impersonation. Before accessing the data, 
# the system should compare the public and private key. Without a private key, nodes are assumed not to be able to learn anything about the encrypted content
def verify(private_key, public_key):
    h = hashlib.new('sha256') # instead of MD5
    h.update(private_key.encode('ascii'))
    return h.hexdigest() == public_key
